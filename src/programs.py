from typing import Callable, Dict, List

from controls import move_to_pose, home_gripper, move_to_home, grasp
from notifier import notify_arm_location, notify_handover_finished, notify_task_completed


class MoveToHandoverProgram:
    def __init__(self, target_1: tuple, target_2: tuple, speed: float):
      self.target_1 = target_1
      self.target_2 = target_2
      self.speed = speed


class ContainerProgram:
    def __init__(self, container_pose: tuple, rotation_pose: tuple):
      self.container_pose = container_pose
      self.rotation_pose = rotation_pose

left_tray_index = 0
right_tray_index = 0

packaging_containers: List[ContainerProgram] = [
    ContainerProgram(
        [0.002248279311341833, -1.6462406242577885, 1.5121958603185466, -1.5861340990401152, 0.3807249898248249, 2.9013224810479596, -1.0896717803147102, 0.01507969293743372, 0.01507969293743372],
        [0.004230882982805109, -1.627371092956063, 1.5081584893472895, -1.5928073048813025, 0.3808357444649443, 2.901280942055914, -0.22615009630388683, 0.01507969293743372, 0.01507969293743372]
    ),
    ContainerProgram(
        [-0.018928389567032196, -1.6273137721178823, 1.5179667150701959, -1.7738580026961208, 0.38069552059972905, 2.901263686908616, -1.1225683816737597, 0.01507969293743372, 0.01507969293743372],
        [-0.023666601404896254, -1.6273095872444017, 1.5183602131585603, -1.7772289026829233, 0.3807173153032025, 2.901257100198004, -0.19820742552147969, 0.01507969293743372, 0.01507969293743372]
    ),
    ContainerProgram(
        [-0.1570470638656547, -1.6460593967634374, 1.5306730125160066, -1.8223172412993769, 0.3808163018965027, 2.9012981948275605, -1.043109827087985, 0.01507969293743372, 0.01507969293743372],
        [-0.1623170586761656, -1.6452814565188176, 1.5193132114745187, -1.826901276203548, 0.38085273998276903, 2.9012881868018043, -0.33684119666284984, 0.01507969293743372, 0.01507969293743372]
    ),
    ContainerProgram(
        [-0.35490714553364555, -1.64627471447883, 1.569441062559161, -1.8211559429503321, 0.3807318396038479, 2.901263686908616, -1.116908721970187, 0.01507969293743372, 0.01507969293743372],
        [-0.35420976928660747, -1.6456947825847796, 1.5688500259131715, -1.821544956073426, 0.3807975131803088, 2.901269627565364, -0.3787724177506234, 0.01507969293743372, 0.01507969293743372]
    ),
    ContainerProgram(
        [-0.6392709124824797, -1.6462782348162843, 1.5384150470310531, -1.702816912394271, 0.3807368285126156, 2.901272931191656, -1.1132850520279673, 0.01507969293743372, 0.01507969293743372],
        [-0.6328510579644588, -1.6460399065247047, 1.5428111151979682, -1.7030971535666308, 0.380803142256206, 2.901273643268479, -0.27908643925852245, 0.01507969293743372, 0.01507969293743372]
    ),
]
current_container_index = 0
number_of_items_in_container = 0


left_tray_handovers: List[MoveToHandoverProgram] = [
    MoveToHandoverProgram(
        [-1.7345892382839267, -1.6977629277915283, 1.8864148556132514, -2.4758733792003373, 0.13989522051277847, 2.7058916587192914, -0.5809533127612536, 0.015092169865965843, 0.015092169865965843],
        [-1.9635976442872431, -1.726051660183413, 1.800327525925218, -2.0999296435010204, 0.08599873777261757, 2.7050692066483286, -0.6130987199611134, 0.015098408795893192, 0.015098408795893192],
        0.2
    ),
    MoveToHandoverProgram(
        [-1.7411623925131288, -1.6976283880200302, 1.7527606401443478, -2.4933927496525277, 0.13950533474816215, 2.7058760945929423, -0.6601669629878468, 0.015091842040419579, 0.015091842040419579],
        [-1.986881780829051, -1.7261419224655419, 1.7877880153656003, -2.028759749556321, 0.08599856294836604, 2.705053248498175, -0.614451490289635, 0.015098408795893192, 0.015098408795893192],
        0.21
    ),
    MoveToHandoverProgram(
        [-1.9037278494416618, -1.6979210991151459, 1.8520749450482819, -2.4630088715009295, 0.1430082124133517, 2.7058927646584627, -0.5494176698194608, 0.015091842040419579, 0.015091842040419579],
        [-1.9985437140046343, -1.7259969598703218, 1.8119275118662164, -2.1789313834006343, 0.11285665358437431, 2.705006852242682, -0.6121052901413705, 0.015098408795893192, 0.015098408795893192],
        0.24
    ),
    MoveToHandoverProgram(
        [-1.6964604606351077, -1.6981267437516596, 1.8476240948124936, -2.385564239369343, 0.1402486684454812, 2.7062718922558697, -0.5934494487908152, 0.015091842040419579, 0.015091842040419579],
        [-2.130696899129633, -1.726028942593357, 1.804976721428988, -2.145641970096756, 0.1128525749379476, 2.7050310893850815, -0.6121273732648954, 0.015098408795893192, 0.015098408795893192],
        0.23
    ),
    MoveToHandoverProgram(
        [-2.1053265234751235, -1.7260391433560935, 1.7754392948824365, -2.1453156734600403, 0.112851252509488, 2.7050297435065347, -0.6190795175698067, 0.015098736621439457, 0.015098736621439457],
        [-2.017048422612642, -1.726027080604582, 1.7850525591164303, -2.14500520947105, 0.112851252509488, 2.7050434192948867, -0.6176308433678415, 0.015098408795893192, 0.015098408795893192],
        0.28
    ),
    MoveToHandoverProgram(
        [-1.8678924610199445, -1.6958542249762079, 1.811306093567296, -2.3007969059074758, 0.1663232754204008, 2.705756882124477, -0.6152547399666574, 0.015092169865965843, 0.015092169865965843],
        [-2.0150696133060877, -1.7261183961567126, 1.8078723723762913, -2.086964722583168, 0.11283652913944422, 2.7050389433834283, -0.6132819780177539, 0.015098736621439457, 0.015098736621439457],
        0.25
    ),
    MoveToHandoverProgram(
        [-1.739731228918948, -1.7276463652828282, 1.7824389251180612, -2.1862916474116423, 0.1586859167151981, 2.706084618661139, -0.6289809664554065, 0.015091842040419579, 0.015091842040419579],
        [-1.9112968319634502, -1.72765736031114, 1.8048747212761327, -2.1365984971312746, 0.11283637389871809, 2.7050274123620595, -0.6160828455752797, 0.015098736621439457, 0.015098736621439457],
        0.27
    ),
    MoveToHandoverProgram(
        [-1.8589526765722977, -1.7279751537891856, 1.8306378445207028, -2.257267398231908, 0.16700712666246625, 2.7060729711188207, -0.6144564279384082, 0.015092169865965843, 0.015092169865965843],
        [-1.9052091093255619, -1.7277056307199166, 1.785176251702487, -2.0617797064195598, 0.11283637389871809, 2.70503894338344, -0.6182287057704394, 0.015098408795893192, 0.015098408795893192],
        0.30
    ),
    MoveToHandoverProgram(
        [-1.8584896059116744, -1.7278082491059825, 1.7400466414823714, -2.25843286437319, 0.1669577001068327, 2.706066969328456, -0.6692922171420521, 0.015092169865965843, 0.015092169865965843],
        [-1.9422408376508256, -1.7276965446137544, 1.818988702037878, -2.0974130004808003, 0.11456176782978905, 2.7050218694342507, -0.5976588408615854, 0.015098736621439457, 0.015098736621439457],
        0.32
    ),
    MoveToHandoverProgram(
        [-1.9214989425759563, -1.7277670063386883, 1.7707124769968055, -2.374402925993267, 0.16696634675463481, 2.7054116473991376, -0.6692658488419321, 0.015091842040419579, 0.015091842040419579],
        [-1.8468418886285078, -1.7275591352677644, 1.8378305550123513, -2.1871966576827195, 0.11456044540140364, 2.705026345345709, -0.5976703827049997, 0.015098736621439457, 0.015098736621439457],
        0.35
    ),
    MoveToHandoverProgram(
        [-1.594895482351777, -1.6579478930127132, 1.8290594049888347, -2.546119490127117, 0.1895465487771564, 2.7059256042464686, -0.6349153797295358, 0.015092169865965843, 0.015092169865965843],
        [-1.8804045224392738, -1.724886634090496, 1.8328600489800437, -2.2104691530820646, 0.11456644719176823, 2.705036578522859, -0.5984734631048307, 0.015098408795893192, 0.015098408795893192],
        0.31
    ),
    MoveToHandoverProgram(
        [-1.588009392453913, -1.6974995675285158, 1.962218952296073, -2.513075617695418, 0.18741147364510427, 2.705962588374386, -0.5466913311150339, 0.015092169865965843, 0.015092169865965843],
        [-2.0601097824450076, -1.7250488792162884, 1.81739155337685, -2.1698876279529773, 0.11456370060973697, 2.7050249211920634, -0.6016846108900176, 0.015098408795893192, 0.015098408795893192],
        0.34
    ),
    MoveToHandoverProgram(
        [-2.0574314267881664, -1.6987805819427755, 1.8904562154116034, -2.433488076266842, 0.19261571773385217, 2.7066801278723607, -0.6063578645851877, 0.015092169865965843, 0.015092169865965843],
        [-2.0075882707060426, -1.7272588134564852, 1.8067834760736168, -2.128870246519122, 0.11456176782978905, 2.705013438953294, -0.6006239009367094, 0.015098408795893192, 0.015098408795893192],
        0.37
    ),
    MoveToHandoverProgram(
        [-2.4125971445463326, -1.7293957772116895, 1.8171094837857966, -2.13265163368215, 0.182311491423183, 2.706652726735497, -0.6620182784861989, 0.015092169865965843, 0.015092169865965843],
        [-1.9564614573524761, -1.7270855337865023, 1.771425293989349, -2.1307936587319003, 0.11454767851444383, 2.705031113717291, -0.6072126230067676, 0.015098736621439457, 0.015098736621439457],
        0.38
    ),
    MoveToHandoverProgram(
        [-2.1007809845941106, -1.6911573175220878, 1.7100887247602103, -2.303616094975474, 0.21447103816166738, 2.70662092114278, -0.7716209022667673, 0.015092169865965843, 0.015092169865965843],
        [-1.9566308149873164, -1.7272600031787786, 1.7720633302740296, -2.0373319220124624, 0.11454509232134716, 2.705030694100592, -0.6072050953374968, 0.015098408795893192, 0.015098408795893192],
        0.35
    ),
    MoveToHandoverProgram(
        [-1.9247599122861918, -1.693554433684771, 1.8401756323537481, -2.4229295518774734, 0.21376195316844512, 2.706640984406328, -0.6599295306669342, 0.015092169865965843, 0.015092169865965843],
        [-1.9726060058694135, -1.7314177046658699, 1.8097687662271782, -2.045317441909906, 0.11404031271075252, 2.7050119130743875, -0.5647886713809436, 0.015098736621439457, 0.015098736621439457],
        0.40
    ),
    MoveToHandoverProgram(
        [-1.9410000279192243, -1.6926182550709943, 1.8959225026873103, -2.553772984621818, 0.21794519310527374, 2.7064627060227924, -0.6187823963628875, 0.015092169865965843, 0.015092169865965843],
        [-1.9996372668283027, -1.736508107658643, 1.8177782592618517, -2.0533125807778876, 0.1121049198044671, 2.7050089630418355, -0.5879931887454456, 0.015098408795893192, 0.015098408795893192],
        0.35
    ),
    MoveToHandoverProgram(
        [-1.392540206418037, -1.6533847335681577, 1.9135970029830933, -2.6677610552311877, 0.21795550152991408, 2.70629532664352, -0.595540888355838, 0.015092169865965843, 0.015092169865965843],
        [-2.041402657943859, -1.7365053104712946, 1.8216019733663191, -2.0812017274252375, 0.1168701806292479, 2.7050109716311863, -0.5704076441592639, 0.015098736621439457, 0.015098736621439457],
        0.38
    ),
    MoveToHandoverProgram(
        [-1.3917241876501787, -1.7088501409447694, 1.8606536047872129, -2.3704858996408027, 0.21076307798489713, 2.7062863748206034, -0.614154072648949, 0.015092169865965843, 0.015092169865965843],
        [-2.001539303490162, -1.7367186662941645, 1.799860850166856, -2.0146476441632, 0.11682197526428434, 2.7050236877732807, -0.580149935927656, 0.015098736621439457, 0.015098736621439457],
        0.36
    ),
    MoveToHandoverProgram(
        [-1.8782944451733798, -1.7080619575600873, 1.8841368447186653, -2.3828406788006165, 0.21611603881253133, 2.705581901960903, -0.6160331051018502, 0.015092169865965843, 0.015092169865965843],
        [-2.1053265234751235, -1.7260391433560935, 1.7754392948824365, -2.1453156734600403, 0.112851252509488, 2.7050297435065347, -0.6190795175698067, 0.015098736621439457, 0.015098736621439457],
        0.40
    ),
]
right_tray_handovers: List[MoveToHandoverProgram] = [
    MoveToHandoverProgram(
        [-0.8041485248866834, -1.6283800298396653, 1.7047806013783593, -2.1072191833194935, 0.3172504085929063, 2.9029403321875464, -0.9856078291402922, 0.015079365111887455, 0.015079365111887455],
        [-1.1170198075311224, -1.653794224505226, 1.721225294765673, -2.0011667846336656, 0.30076889091088704, 2.902139595444675, -0.9537002778516875, 0.01507969293743372, 0.01507969293743372],
        0.20
    ),
    MoveToHandoverProgram(
        [-0.8066897911013391, -1.628508730636901, 1.702269242387069, -2.02124595215446, 0.31725714390807674, 2.9029366569782744, -0.985583508061038, 0.015079365111887455, 0.015079365111887455],
        [-1.1762816222843369, -1.6539850270455343, 1.7127737262487686, -1.9072650000314213, 0.30076932615704005, 2.9021034480068417, -0.9537138708896107, 0.015079365111887455, 0.015079365111887455],
        0.21
    ),
    MoveToHandoverProgram(
        [-0.8984914628999274, -1.6285314326919118, 1.7021959628063383, -2.0221729665890074, 0.3172674523327086, 2.902831581526332, -0.9855347125199106, 0.01507969293743372, 0.01507969293743372],
        [-1.22416267980218, -1.6541742725443616, 1.7053324457837062, -1.8128395927998218, 0.30076464679505993, 2.9014522601101134, -0.9537287068830597, 0.01507969293743372, 0.01507969293743372],
        0.25
    ),
    MoveToHandoverProgram(
        [-0.8959203053691931, -1.6279679748802853, 1.6669810389970479, -2.022310781465649, 0.3172538703996286, 2.9028345300326563, -0.9857691312299833, 0.015079365111887455, 0.015079365111887455],
        [-1.255839992294948, -1.6543700151221126, 1.7214855448076156, -1.9253509289758246, 0.3007669325900996, 2.9014431429836485, -0.9537430119978058, 0.01507969293743372, 0.01507969293743372],
        0.23
    ),
    MoveToHandoverProgram(
        [-0.9541914956582735, -1.628206816393725, 1.6653987023371593, -1.8717745458734427, 0.3172640953991148, 2.902799490385585, -0.9857489975757068, 0.015079365111887455, 0.015079365111887455],
        [-1.2229945691916133, -1.6542546175571962, 1.7193933374874155, -2.0573432154321885, 0.30076681848043224, 2.901493722690476, -0.9537470261719492, 0.01507969293743372, 0.01507969293743372],
        0.27
    ),
    MoveToHandoverProgram(
        [-0.9727068863333316, -1.6038245165473535, 1.6337773354775333, -1.9755771738186385, 0.31725963658756673, 2.9017251953416396, -1.0132143815822072, 0.015079365111887455, 0.015079365111887455],
        [-1.2259392278570875, -1.6548318076886628, 1.7279634791424454, -1.9333993742758768, 0.3007457603764679, 2.9014878226253717, -0.9537986525363391, 0.01507969293743372, 0.01507969293743372],
        0.30
    ),
    MoveToHandoverProgram(
        [-1.0643952386755693, -1.6049643832256917, 1.7002692733492981, -1.9766292672408252, 0.3172846593587409, 2.901693473273001, -1.0061694447663092, 0.015079365111887455, 0.015079365111887455],
        [-1.3058892250409095, -1.6547353395160873, 1.6509757802695557, -1.717883166179386, 0.2990714953872893, 2.9014837663306126, -0.9951455378996001, 0.01507969293743372, 0.01507969293743372],
        0.28
    ),
    MoveToHandoverProgram(
        [-1.0678653771756004, -1.6238357471964282, 1.6589543976198162, -1.8880331457706923, 0.3172170931763119, 2.9020536534918677, -1.012300901459323, 0.015079365111887455, 0.015079365111887455],
        [-1.4178334148209846, -1.6550696454272247, 1.6563453850526502, -1.5407526434514058, 0.2990871432178952, 2.9014583239713803, -0.9951440120206939, 0.015079365111887455, 0.015079365111887455],
        0.32
    ),
    MoveToHandoverProgram(
        [-0.8730232920547099, -1.6240587551648473, 1.65899536437319, -2.005293036092792, 0.3172488997909757, 2.901896449817551, -1.010589952515231, 0.015079365111887455, 0.015079365111887455],
        [-1.2487362339120143, -1.6554400773981572, 1.6664213830880952, -1.8716270436738667, 0.29909866702355975, 2.9023980443610085, -0.9951552017993397, 0.015079365111887455, 0.015079365111887455],
        0.31
    ),
    MoveToHandoverProgram(
        [-0.9163283108759311, -1.598599338648612, 1.6699177418591702, -2.1896767573257665, 0.3167817406701388, 2.9018909693691466, -1.0105498044159678, 0.015079365111887455, 0.015079365111887455],
        [-1.2052234779205278, -1.6548490022971616, 1.694402457655589, -1.9025377438361182, 0.3194104471471574, 2.902086612476907, -0.9625087309347259, 0.01507969293743372, 0.01507969293743372],
        0.35
    ),
    MoveToHandoverProgram(
        [-0.7220002279701362, -1.5984903742645398, 1.6751333544045164, -2.318742134445592, 0.3168062232467863, 2.9019281372361707, -1.0105265379415618, 0.015079365111887455, 0.015079365111887455],
        [-1.2093867715534468, -1.7101492627417016, 1.679889761835088, -1.9176312327761351, 0.3188782376713223, 2.9021074792924173, -1.0016143529083994, 0.01507969293743372, 0.01507969293743372],
        0.37
    ),
    MoveToHandoverProgram(
        [-0.8712228298521877, -1.5988529977050925, 1.6593161072981986, -2.078731979150521, 0.31681446736388735, 2.9019141187142194, -1.0104692697988615, 0.01507969293743372, 0.01507969293743372],
        [-1.2120172867356684, -1.7100826466209007, 1.694406170543871, -2.03884391073595, 0.3188984559695595, 2.9020810938808648, -0.9940347354080941, 0.01507969293743372, 0.01507969293743372],
        0.33
    ),
    MoveToHandoverProgram(
        [-0.8712227517440502, -1.5988497108744968, 1.659317091721087, -2.0787286382788106, 0.31681314493550194, 2.9019124681481814, -1.0104738474355803, 0.01507969293743372, 0.01507969293743372],
        [-1.1995415894525092, -1.629009039226331, 1.6781757269742195, -2.200693304413088, 0.3167501001366081, 2.901744980904791, -1.0281737884349291, 0.015079365111887455, 0.015079365111887455],
        0.35
    ),
    MoveToHandoverProgram(
        [-1.154367852411772, -1.5994838693561277, 1.6479578031908002, -1.6968598715963132, 0.31680917765034566, 2.9018937529912625, -1.0104797475006846, 0.01507969293743372, 0.01507969293743372],
        [-1.1256445536195185, -1.6446085799725316, 1.6769796797600303, -2.100431409384075, 0.3169307933913337, 2.9010584116909235, -1.0257902670370207, 0.01507969293743372, 0.01507969293743372],
        0.39
    ),
    MoveToHandoverProgram(
        [-1.027821916145191, -1.6379055280350796, 1.670145603514554, -1.9182205121915317, 0.3167874887254503, 2.901305378370815, -1.0104906368719204, 0.015079365111887455, 0.015079365111887455],
        [-1.178038426166575, -1.6446608158914666, 1.7215066680071647, -2.133501285670096, 0.3169321158197191, 2.9010468829962393, -1.025806115514702, 0.01507969293743372, 0.01507969293743372],
        0.38
    ),
    MoveToHandoverProgram(
        [-1.1161386698518794, -1.6381196992773759, 1.6678162969957318, -1.8125490178559955, 0.3167996111048592, 2.901297850701544, -1.0104794470932745, 0.015079365111887455, 0.015079365111887455],
        [-1.1783258686315967, -1.6448701228928149, 1.7114002288349888, -2.017447675692447, 0.3169321158197191, 2.9013225063615375, -1.025759719259209, 0.01507969293743372, 0.01507969293743372],
        0.36
    ),
    MoveToHandoverProgram(
        [-1.0888072602288765, -1.6382282089013087, 1.6673668079595116, -1.7643930688378404, 0.31679961110485927, 2.9016809194220436, -1.0104794470932745, 0.015079365111887455, 0.015079365111887455],
        [-1.1798023110587355, -1.6433662502723825, 1.7050037137257759, -2.2173337005314075, 0.3172993146048651, 2.901319682947209, -1.0052423159745005, 0.01507969293743372, 0.01507969293743372],
        0.37
    ),
    MoveToHandoverProgram(
        [-0.9788738654060429, -1.638201751156857, 1.6783997024117858, -1.9480766906236344, 0.31682609821690455, 2.9017011245998994, -1.010476395335462, 0.01507969293743372, 0.01507969293743372],
        [-1.172914583005403, -1.6434838927754183, 1.716104942489081, -2.1470791980531447, 0.31729713148540917, 2.9013229259782363, -1.0060315529969002, 0.01507969293743372, 0.01507969293743372],
        0.35
    ),
    MoveToHandoverProgram(
        [-1.1175189689225529, -1.6383893492676376, 1.6749231780546925, -1.7756638023309539, 0.3168295739624235, 2.901559414914886, -1.0078929996954067, 0.015079365111887455, 0.015079365111887455],
        [-1.1014717564164564, -1.644791010672586, 1.7285990963818734, -2.180136052292658, 0.31734723673926457, 2.901849659376674, -0.9493083819217152, 0.01507969293743372, 0.01507969293743372],
        0.39
    ),
    MoveToHandoverProgram(
        [-1.219461838882682, -1.6385180336467005, 1.6730600475310728, -1.66023231547968, 0.31682692910565263, 2.9015325658453834, -1.0079187791016364, 0.015079365111887455, 0.015079365111887455],
        [-1.2099445360083327, -1.6517209162126505, 1.764517295268544, -2.2400486746167054, 0.3806938233640459, 2.901336236092779, -0.99180475954877, 0.01507969293743372, 0.01507969293743372],
        0.40
    ),
]


named_poses = {
    "idle": {
        "joint1": 0.030467100035464555,
        "joint2": -1.5941579964038257,
        "joint3": 1.7121470146322146,
        "joint4": -2.864846397348909,
        "joint5": 0.3153906897900572,
        "joint6": 2.836382126900885,
        "joint7": -0.9636582828031645
    },
    "packaging_common": {
        "joint1": 0.4672196006673697,
        "joint2": -1.6546232406214665,
        "joint3": 1.6710899174338891,
        "joint4": -2.5156881482141054,
        "joint5": 0.38071471120251543,
        "joint6": 2.900895444644822,
        "joint7": -1.0297259617315397
    }
}


def __increase_packaging_counter() -> None:
    global packaging_containers, current_container_index, number_of_items_in_container

    number_of_items_in_container += 1
    print("Current Container:", current_container_index, "--", "Number of Items:", number_of_items_in_container)
    if number_of_items_in_container == 8:
        current_container_index += 1
        number_of_items_in_container = 0

    if current_container_index >= len(packaging_containers):
        notify_task_completed()
    else:
        notify_handover_finished()


def move_to_left_tray(move_group, *args, **kwargs):
    global left_tray_handovers, left_tray_index

    if left_tray_index < len(left_tray_handovers):
        program = left_tray_handovers[left_tray_index]
    else:
        program = left_tray_handovers[len(left_tray_handovers)-1]

    # move to close to handover location
    move_to_pose(move_group, program.target_1[0], program.target_1[1], program.target_1[2], program.target_1[3], program.target_1[4], program.target_1[5], program.target_1[6], None, None, program.speed)
    
    # move to specific handover location
    move_to_pose(move_group, program.target_2[0], program.target_2[1], program.target_2[2], program.target_2[3], program.target_2[4], program.target_2[5], program.target_2[6])
    left_tray_index += 1
    notify_arm_location("handover_location")


def move_to_right_tray(move_group, *args, **kwargs):
    global right_tray_handovers, right_tray_index

    if right_tray_index < len(right_tray_handovers):
        program = right_tray_handovers[right_tray_index]
    else:
        program = right_tray_handovers[len(right_tray_handovers)-1]

    # move to close to handover location
    move_to_pose(move_group, program.target_1[0], program.target_1[1], program.target_1[2], program.target_1[3], program.target_1[4], program.target_1[5], program.target_1[6], None, None, program.speed)

    # move to specific handover location
    move_to_pose(move_group, program.target_2[0], program.target_2[1], program.target_2[2], program.target_2[3], program.target_2[4], program.target_2[5], program.target_2[6], 0.15)
    right_tray_index += 1
    notify_arm_location("handover_location")


def move_to_error_pose(move_group, *args, **kwargs):
    # move to idle
    move_to_pose(move_group, speed=0.3, **named_poses["idle"])
    notify_arm_location("error_pose")

    __increase_packaging_counter()


def move_to_packaging(move_group, *args, **kwargs):
    global packaging_containers, current_container_index
    # move to packaging common
    move_to_pose(move_group, speed=0.25, **named_poses["packaging_common"])
    notify_arm_location("packaging")

    # move to specific container and rotate
    cp = packaging_containers[current_container_index]
    move_to_pose(move_group, cp.container_pose[0], cp.container_pose[1], cp.container_pose[2], cp.container_pose[3], cp.container_pose[4], cp.container_pose[5], cp.container_pose[6], None, None, 0.3)
    move_to_pose(move_group, cp.rotation_pose[0], cp.rotation_pose[1], cp.rotation_pose[2], cp.rotation_pose[3], cp.rotation_pose[4], cp.rotation_pose[5], cp.rotation_pose[6], None, None, 0.5)
    move_to_pose(move_group, cp.container_pose[0], cp.container_pose[1], cp.container_pose[2], cp.container_pose[3], cp.container_pose[4], cp.container_pose[5], cp.container_pose[6], None, None, 0.5)

    # move to packaging common
    move_to_pose(move_group, speed=0.3, **named_poses["packaging_common"])

    __increase_packaging_counter()


def move_to_idle(move_group, *args, **kwargs):
    move_to_pose(move_group, **named_poses["idle"])
    notify_arm_location("idle")


def wink(move_group, *args, **kwargs):
    # move to start pose (pose 1)
    move_to_pose(move_group, -0.244254309526806, -1.5608413373712908, 0.5092606457281394, -2.6472411544866725, 0.310233694963985, 2.836684098336432, -0.8978506462242867, 0.015098736621439457, 0.015098736621439457, 0.35)
    for _ in range(3):
        # pose 2
        move_to_pose(move_group, -0.24030484537492716, -1.293151546561911, -0.526760826202861, -2.6645452538077308, 0.3023793460561892, 2.836668788684739, -0.8873241067396269, 0.015098736621439457, 0.015098736621439457, 0.35)
        # pose 1
        move_to_pose(move_group, -0.244254309526806, -1.5608413373712908, 0.5092606457281394, -2.6472411544866725, 0.310233694963985, 2.836684098336432, -0.8978506462242867, 0.015098736621439457, 0.015098736621439457, 0.35)
    # idle
    move_to_idle(move_group)


def prepare_experiment(move_group, home_gripper_client, grasp_client) -> None:
    home_gripper(home_gripper_client)
    move_to_home(move_group)
    move_to_idle(move_group)
    grasp(grasp_client, 0.035)
    print("Press ENTER to grasp bowl ...")
    input()
    grasp(grasp_client, 0.03)
    print("Press ENTER to continue ...")
    input()


def end_experiment(move_group, home_gripper_client, grasp_client) -> None:
    move_to_idle(move_group)
    print("Press ENTER to release bowl ...")
    input()
    grasp(grasp_client, 0.035)
    print("Press ENTER to when you removed the bowl ...")
    input()
    move_to_home(move_group)
    home_gripper(home_gripper_client)


def home(move_group, home_gripper_client, *args, **kwargs) -> None:
    move_to_home(move_group)
    home_gripper(home_gripper_client)


def full_test(move_group, *args, **kwargs):
    for _ in range(20):
        move_to_left_tray(move_group)
        move_to_packaging(move_group)
        move_to_right_tray(move_group)
        move_to_packaging(move_group)
    move_to_idle(move_group)


PROGRAMS: Dict[str, Callable] = {
    "move_to_left_tray": move_to_left_tray,
    "move_to_right_tray": move_to_right_tray,
    "move_to_error_pose": move_to_error_pose,
    "move_to_packaging": move_to_packaging,
    "move_to_idle": move_to_idle,
    "wink": wink,
    "prepare_experiment": prepare_experiment,
    "end_experiment": end_experiment,
    "home": home,
    "full_test": full_test,
}